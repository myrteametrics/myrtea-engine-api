### DO NOT COMMIT ANY ENVIRONMENT CHANGE ON THIS FILE
### If you need to use another environment, edit this file localy, and do not propagate the changes.

# Enable or disable debug mode
# Debug mode print all configuration variables when the binary start
# WARNING: every single variable will be printed, including password or sensitive data
# Default value: "false"
DEBUG_MODE = "false"

# Specify the server running port. API (including swagger) will be reachable through this port
# Default value: "9082"
SERVER_PORT = "9082"

# Enable or disable TLS and HTTPS server security (false = HTTPS / true = HTTP)
# If SERVER_ENABLE_TLS = true, SERVER_SSL_FILE_CRT and SERVER_SSL_FILE_KEY must be specified
# Default value: "false"
SERVER_ENABLE_TLS = "false"

# TLS certificate file path
# Default value: "certs/server.rsa.crt"
SERVER_TLS_FILE_CRT = "certs/server.rsa.crt"

# TLS private key file path
# Default value: "certs/server.rsa.key"
SERVER_TLS_FILE_KEY = "certs/server.rsa.key"

# Enable or Disable CORS policy on the API
# See https://enable-cors.org/
# Default value: "false"
API_ENABLE_CORS = "false"

# Enable or Disable API security
# If unsecured = false, a valid JWT (JSON Web Token) is required to access the API
# This JWT is delivered using the /login endpoint (which required a login and a password)
# If API_ENABLE_SECURITY = false, no JWT is required and all endpoints can be called freely
# Default value: "true"
API_ENABLE_SECURITY = "true"

# Enable or Disable API Gateway mode
# If API_ENABLE_GATEWAY_MODE = true, the API will still required a JWT but no validation will be done on this JWT
# Be aware that in gateway mode, every JWT MUST have been validated by another layer of security (in this case, an API Gateway using the auth-api)
# The auth-api will be responsible to deliver the tokens (/login) and to validate the tokens (/validate)
# Default value: "false"
API_ENABLE_GATEWAY_MODE = "false"

# Specify the instance name
# The instance name must be the same in every components in the stack to ensure proper working conditions
# Default value: "myrtea"
INSTANCE_NAME = "myrtea"

# Specify the hostname used to access the swagger UI
# If not set (or incorrect), the swagger UI will be available but will not be usable (using execute on endpoints)
# Default value: "localhost:9082"
SWAGGER_HOST = "localhost:9082"

# Specify the basepath used to access the swagger UI
# If not set (or incorrect), the swagger UI will be available but will not be usable (using execute on endpoints)
# Default value: "/api/v4"
SWAGGER_BASEPATH = "/api/v4"

# Specify the elasticsearch URLS
# Array of URLS might not work using environment variable (should be fixed soon)
# Default value: "http://localhost:9200"
ELASTICSEARCH_URLS = ["http://localhost:9200"]

# Specify the postgresql host name
# Default value: "localhost"
POSTGRESQL_HOSTNAME = "localhost"

# Specify the postgresql port
# Default value: "5432"
POSTGRESQL_PORT = "5432"

# Specify the postgresql database name
# Default value: "postgres"
POSTGRESQL_DBNAME = "postgres"

# Specify the postgresql user name
# Default value: "postgres"
POSTGRESQL_USERNAME = "postgres"

# Specify the postgresql user password
# Default value: "postgres"
POSTGRESQL_PASSWORD = "postgres"

# Specify the postgresql connection pool maximum open connection
# Default value: "6"
POSTGRESQL_CONN_POOL_MAX_OPEN = "6"

# Specify the postgresql connection pool maximum idle connection
# Default value: "3"
POSTGRESQL_CONN_POOL_MAX_IDLE = "3"

# Specify the postgresql connection pool maximum idle connection
# Expressed as a Golang duration
# Default value: "0"
POSTGRESQL_CONN_MAX_LIFETIME = "0"

# Enable or disable crons automation on API start
# Warning: Keep this parameter to "true" in production to ensure proper rotation even after a restart
# Default value: "true"
ENABLE_CRONS_ON_START = "true"