// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2023-03-01 15:08:48.185261202 +0100 CET m=+0.167651535

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "Myrtea Engine-API Swagger",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Myrtea Metrics",
            "url": "https://myrteametrics.ai/en/",
            "email": "contact@myrteametrics.com"
        },
        "license": {},
        "version": "1.0"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/engine/issues_all": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all issues",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Get all issues",
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/admin/security/permissions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Gets a list of all user permissions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get all user permissions",
                "responses": {
                    "200": {
                        "description": "list of permissions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/permissions.Permission"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add an user permission to the user permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Create a new permission",
                "parameters": [
                    {
                        "description": "permission (json)",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/permissions.Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "permission",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/permissions.Permission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/security/permissions/validate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Validate a new permission definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Validate a new permission definition",
                "parameters": [
                    {
                        "description": "permission (json)",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/permissions.Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "permission",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/permissions.Permission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/security/permissions/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Gets an user permission with the specified id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get an user permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "permission",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/permissions.Permission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates the user permission information concerning the user permission with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Update permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "permission (json)",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/permissions.Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "permission",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/permissions.Permission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes an user permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/security/roles": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Gets a list of all user roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get all user roles",
                "responses": {
                    "200": {
                        "description": "list of roles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/roles.Role"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add an user role to the user roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Create a new role",
                "parameters": [
                    {
                        "description": "role (json)",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/roles.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/security/roles/validate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Validate a new role definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Validate a new role definition",
                "parameters": [
                    {
                        "description": "role (json)",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/roles.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/security/roles/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Gets an user role with the specified id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get an user role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates the user role information concerning the user role with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Update role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "role (json)",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/roles.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes an user role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Delete role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/security/roles/{id}/permissions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all permissions associated with a specified role id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get all permissions associated with a role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "permission",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/permissions.Permission"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Set permissions on a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Set permissions on a role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of permissions UUIDs",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/[]string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/security/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Gets a list of all user users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all user users",
                "responses": {
                    "200": {
                        "description": "list of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/users.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add an user user to the user users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "user (json)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/users.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/users.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/security/users/validate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Validate a new user definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Validate a new user definition",
                "parameters": [
                    {
                        "description": "user (json)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/users.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/users.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/security/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Gets an user user with the specified id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get an user user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/users.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates the user user information concerning the user user with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "user (json)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/users.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/users.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes an user user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/security/users/{id}/roles": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Set roles on a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Set roles on a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of roles UUIDs",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/[]string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/users.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/assistant/message": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sends a message to the myrtea Assistant.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assistant"
                ],
                "summary": "Sends a message to the myrtea Assistant.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Timestamp",
                        "name": "time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "User sentence and context Tokens",
                        "name": "sentence",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Enable log debugging",
                        "name": "debug",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status Internal Server Error"
                    }
                }
            }
        },
        "/coordinator/alias": {
            "post": {
                "description": "returns an alias based on an instance, a document type and a depth",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Alias"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/coordinator/cron": {
            "get": {
                "description": "returns an overview of a single cron",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/coordinator/cron/start": {
            "post": {
                "description": "starts a single cron",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/coordinator/cron/stop": {
            "post": {
                "description": "stops a single cron",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/coordinator/crons": {
            "get": {
                "description": "returns an overview of every defined crons",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/coordinator/crons/start": {
            "post": {
                "description": "starts every defined crons",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/coordinator/crons/stop": {
            "post": {
                "description": "stops every defined crons",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/engine/actions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all action definitions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actions"
                ],
                "summary": "Get all action definitions",
                "responses": {
                    "200": {
                        "description": "list of all actions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Action"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new action definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actions"
                ],
                "summary": "Create a new action definition",
                "parameters": [
                    {
                        "description": "Action definition (json)",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Action"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "action",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Action"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/actions/validate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Validate a new action definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actions"
                ],
                "summary": "Validate a new action definition",
                "parameters": [
                    {
                        "description": "Action definition (json)",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Action"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "action",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Action"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/actions/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a action definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actions"
                ],
                "summary": "Get a action definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Action ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "action",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Action"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create or remplace a action definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actions"
                ],
                "summary": "Create or remplace a action definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Action ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action definition (json)",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Action"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "action",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Action"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a action definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actions"
                ],
                "summary": "Delete a action definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Action ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/calendars": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all calendars",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendars"
                ],
                "summary": "Get all calendars",
                "responses": {
                    "200": {
                        "description": "list of calendars",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/calendar.Calendar"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a Calendar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendars"
                ],
                "summary": "Creates a Calendar",
                "parameters": [
                    {
                        "description": "Calendar (json)",
                        "name": "calendar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "calendar",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/calendar.Calendar"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/calendars/resolved/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a resolved Calendar",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendars"
                ],
                "summary": "Get a resolved Calendar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calendar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "calendar",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/calendar.Calendar"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/calendars/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get an calendar",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendars"
                ],
                "summary": "Get a Calendar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calendar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "calendar",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/calendar.Calendar"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates the calendar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendars"
                ],
                "summary": "Update a calendar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calendar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "calendar (json)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "calendar",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/calendar.Calendar"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete calendar",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendars"
                ],
                "summary": "Delete calendar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calendar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status Internal Server Error"
                    }
                }
            }
        },
        "/engine/calendars/{id}/contains": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Determines wether a timestamp is within a valid calendar period",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendars"
                ],
                "summary": "Determines wether a timestamp is within a valid calendar period",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calendar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to be found within a calendar period",
                        "name": "time",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InPeriodContains",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/calendar.InPeriodContains"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/connector/{id}/executions/last": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Gets the DateTime of the last connections readings.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get the DateTime of the last connections readings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "true to ignore failed connector executions",
                        "name": "successOnly",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "maximum age of data (duration)",
                        "name": "maxage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/engine/connectorconfigs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all connectorConfig definitions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConnectorConfigs"
                ],
                "summary": "Get all connectorConfig definitions",
                "responses": {
                    "200": {
                        "description": "list of all connectorConfigs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ConnectorConfig"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new connectorConfig definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConnectorConfigs"
                ],
                "summary": "Create a new connectorConfig definition",
                "parameters": [
                    {
                        "description": "ConnectorConfig definition (json)",
                        "name": "connectorConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ConnectorConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "connectorConfig",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ConnectorConfig"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/connectorconfigs/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get an connectorConfig definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConnectorConfigs"
                ],
                "summary": "Get an connectorConfig definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ConnectorConfig ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "connectorConfig",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ConnectorConfig"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/connectorconfigs/{name}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create or remplace an connectorConfig definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConnectorConfigs"
                ],
                "summary": "Create or remplace an connectorConfig definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ConnectorConfig ID",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ConnectorConfig definition (json)",
                        "name": "connectorConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ConnectorConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "connectorConfig",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ConnectorConfig"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an connectorConfig definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConnectorConfigs"
                ],
                "summary": "Delete an connectorConfig definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ConnectorConfig ID",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/externalconfigs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all externalConfig definitions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExternalConfigs"
                ],
                "summary": "Get all externalConfig definitions",
                "responses": {
                    "200": {
                        "description": "list of all externalConfigs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ExternalConfig"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new externalConfig definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExternalConfigs"
                ],
                "summary": "Create a new externalConfig definition",
                "parameters": [
                    {
                        "description": "ExternalConfig definition (json)",
                        "name": "externalConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ExternalConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "externalConfig",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ExternalConfig"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/externalconfigs/name/{name}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get an externalConfig definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExternalConfigs"
                ],
                "summary": "Get an externalConfig definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ExternalConfig Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "externalConfig",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ExternalConfig"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/externalconfigs/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get an externalConfig definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExternalConfigs"
                ],
                "summary": "Get an externalConfig definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ExternalConfig ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "externalConfig",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ExternalConfig"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/externalconfigs/{name}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create or remplace an externalConfig definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExternalConfigs"
                ],
                "summary": "Create or remplace an externalConfig definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ExternalConfig ID",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ExternalConfig definition (json)",
                        "name": "externalConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ExternalConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "externalConfig",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ExternalConfig"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an externalConfig definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExternalConfigs"
                ],
                "summary": "Delete an externalConfig definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ExternalConfig ID",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/facts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all fact definitions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facts"
                ],
                "summary": "Get all fact definitions",
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new fact definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facts"
                ],
                "summary": "Create a new fact definition",
                "parameters": [
                    {
                        "description": "Fact definition (json)",
                        "name": "fact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/facts/execute": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Execute a fact with a given timestamp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facts"
                ],
                "summary": "Execute a fact with a given timestamp",
                "parameters": [
                    {
                        "description": "Fact definition (json)",
                        "name": "fact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Timestamp used for the fact execution",
                        "name": "time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Hit per page",
                        "name": "nhit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset number",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Placeholders (format key1:value1,key2:value2)",
                        "name": "placeholders",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Debug true/false",
                        "name": "debug",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/facts/validate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Validate a new fact definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facts"
                ],
                "summary": "Validate a new fact definition",
                "parameters": [
                    {
                        "description": "Fact definition (json)",
                        "name": "fact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/facts/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a fact definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facts"
                ],
                "summary": "Get a fact definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create or remplace a fact definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facts"
                ],
                "summary": "Create or remplace a fact definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fact definition (json)",
                        "name": "fact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a fact definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facts"
                ],
                "summary": "Delete a fact definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/facts/{id}/es": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Execute a fact with a given timestamp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facts"
                ],
                "summary": "Execute a fact with a given timestamp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Find fact by it's name",
                        "name": "byName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Optional SituationID",
                        "name": "situationid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Optional InstanceID",
                        "name": "instanceid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp used for the fact execution",
                        "name": "time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cache maximum age in minutes(go duration: 10m, 1h, ...). If unset, use cache with no limit of age. If set to 0, disable cache",
                        "name": "cache",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Hit per page",
                        "name": "nhit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset number",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Placeholders (format: key1:value1,key2:value2)",
                        "name": "placeholders",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Debug true/false",
                        "name": "debug",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/facts/{id}/execute": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Execute a fact with a given timestamp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facts"
                ],
                "summary": "Execute a fact with a given timestamp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Find fact by it's name",
                        "name": "byName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp used for the fact execution",
                        "name": "time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cache maximum age in minutes(go duration: 10m, 1h, ...). If unset, use cache with no limit of age. If set to 0, disable cache",
                        "name": "cache",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Hit per page",
                        "name": "nhit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset number",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Placeholders (format: key1:value1,key2:value2)",
                        "name": "placeholders",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Debug true/false",
                        "name": "debug",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/facts/{id}/hits": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Execute a fact and restitue the hits",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facts"
                ],
                "summary": "Execute a fact and restitue the hits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Timestamp used for the fact execution",
                        "name": "time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Hit per page",
                        "name": "nhit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset number",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Situation Id, necessary if the fact is template",
                        "name": "situationId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Situation instance Id if applicable",
                        "name": "situationInstanceId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Debug true/false",
                        "name": "debug",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/issues": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get issues by issues states (paginated)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Get issues by issues states (paginated)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue states (comma separated) (Available: open, draft, closedfeedback, closednofeedback, closedtimeout)",
                        "name": "states",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Result limit (default: 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Result offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Result offset (example: 'sort_by=desc(last_modified),asc(id)')",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates an issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Creates an issue",
                "parameters": [
                    {
                        "description": "Issue (json)",
                        "name": "issue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/issues/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get an issue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Get an issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/issues/{id}/close": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Close an issue without feedback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Close an issue without feedback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Close reason (json)",
                        "name": "reason",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/issues/{id}/comment": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an issue comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Update an issue comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment to update",
                        "name": "reason",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/issues/{id}/detection/feedback": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a new detection feedback on an issue (or replace an existing one if the user already made a feedback)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Add a new detection feedback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rating",
                        "name": "reason",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/issues/{id}/draft": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Post a rootcauses/actions recommendation tree as a feedback draft on an issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Send a rootcauses/actions feedback draft on an issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Draft Recommendation tree (json)",
                        "name": "issue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.FrontRecommendation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/issues/{id}/facts_history": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the facts history for an issue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Get the facts history for an issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "404": {
                        "description": "Status Not Found"
                    },
                    "500": {
                        "description": "Status Internal Server Error"
                    }
                }
            }
        },
        "/engine/issues/{id}/feedback": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Post a rootcauses/actions recommendation tree as a feedback on an issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Send a rootcauses/actions feedback on an issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Recommendation tree (json)",
                        "name": "issue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/issues/{id}/history": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get an issue history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Get an issue history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/issues/{id}/recommendation": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Generate the rootcauses/actions recommendation tree for an issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Generate the rootcauses/actions recommendation tree",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "recommendation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.FrontRecommendation"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/models": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all model definitions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Models"
                ],
                "summary": "Get all model definitions",
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new model definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Models"
                ],
                "summary": "Create a new model definition",
                "parameters": [
                    {
                        "description": "Model definition (json)",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/models/validate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Validate a new model definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Models"
                ],
                "summary": "Validate a new model definition",
                "parameters": [
                    {
                        "description": "Model definition (json)",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/models/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a model definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Models"
                ],
                "summary": "Get a model definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Find model by it's name",
                        "name": "byName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create or remplace a model definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Models"
                ],
                "summary": "Create or remplace a model definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Model definition (json)",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a model definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Models"
                ],
                "summary": "Delete a model definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/notifications": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all notifications of the authentified user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get all notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification maximum age (use duration format, ex: 48h)",
                        "name": "maxage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Hit per page",
                        "name": "nhit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset number for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of notifications",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/notification.FrontNotification"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/engine/notifications/sse": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Register a new client to the notifications system using SSE",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Register a new client to the notifications system using SSE",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Json Web Token",
                        "name": "jwt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/notifications/trigger": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Generate a new NotifyTask with a default message for testing",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Send a notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notifier cache key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Notify task definition (json)",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/notifications/ws": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Register a new client to the notifications system using WS",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Register a new client to the notifications system using WS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Json Web Token",
                        "name": "jwt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/notifications/{id}/read": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Mark a notification as \"read\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Update the \"read\" status of the notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "notification ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "notification's read property given value",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status bad request"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/engine/rootcauses": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all rootcause definitions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RootCauses"
                ],
                "summary": "Get all rootcause definitions",
                "responses": {
                    "200": {
                        "description": "list of rootcauses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RootCause"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new rootcause definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RootCauses"
                ],
                "summary": "Create a new rootcause definition",
                "parameters": [
                    {
                        "description": "RootCause definition (json)",
                        "name": "rootcause",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RootCause"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rootcause",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RootCause"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/rootcauses/validate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Validate a new rootcause definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RootCauses"
                ],
                "summary": "Validate a new rootcause definition",
                "parameters": [
                    {
                        "description": "RootCause definition (json)",
                        "name": "rootcause",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RootCause"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rootcause",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RootCause"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/rootcauses/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a rootcause definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RootCauses"
                ],
                "summary": "Get a rootcause definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RootCause ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rootcause",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RootCause"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create or remplace a rootcause definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RootCauses"
                ],
                "summary": "Create or remplace a rootcause definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RootCause ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "RootCause definition (json)",
                        "name": "rootcause",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RootCause"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rootcause",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RootCause"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a rootcause definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RootCauses"
                ],
                "summary": "Delete a rootcause definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RootCause ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/rules": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all rules from rules repository",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "summary": "Get all rules",
                "responses": {
                    "200": {
                        "description": "list of rules",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rule.Rule"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "creates new rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "summary": "create rule",
                "parameters": [
                    {
                        "description": "Rule definition (json)",
                        "name": "rule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rule.Rule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rule",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rule.Rule"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status Internal Server Error"
                    }
                }
            }
        },
        "/engine/rules/validate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "validate a new rule definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "summary": "validate a new rule definition",
                "parameters": [
                    {
                        "description": "Rule definition (json)",
                        "name": "rule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rule.Rule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rule",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rule.Rule"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status Internal Server Error"
                    }
                }
            }
        },
        "/engine/rules/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a specific rule by it's ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "summary": "Get a rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rule",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rule.Rule"
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create or remplace a rule definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "summary": "Create or remplace a rule definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rule definition (json)",
                        "name": "rule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rule.Rule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rule",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rule.Rule"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete rule",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "summary": "delete rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status Internal Server Error"
                    }
                }
            }
        },
        "/engine/rules/{id}/situations": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the list of situatons associated to a rule",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "summary": "Get the list of situatons associated to a rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of situations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/situation.Situation"
                            }
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "401": {
                        "description": "Status Unauthorized"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add the rule at the end of the rules list of each situation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "summary": "Add the rule at the end of the rules list of each situation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Situation association",
                        "name": "situationIds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/%7Barray%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "401": {
                        "description": "Status Unauthorized"
                    }
                }
            }
        },
        "/engine/rules/{id}/versions/{versionid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a specific rule by it's ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "summary": "Get a rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rule",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rule.Rule"
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/engine/scheduler/jobs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all JobSchedules from scheduler repository",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Scheduler"
                ],
                "summary": "Get all JobSchedules",
                "responses": {
                    "200": {
                        "description": "list of schedules",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/scheduler.InternalSchedule"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "creates new JobSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Scheduler"
                ],
                "summary": "create JobSchedule",
                "parameters": [
                    {
                        "description": "JobSchedule definition (json)",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/scheduler.InternalSchedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "schedule",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/scheduler.InternalSchedule"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status Internal Server Error"
                    }
                }
            }
        },
        "/engine/scheduler/jobs/validate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "validate a new JobSchedule definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Scheduler"
                ],
                "summary": "validate a new JobSchedule definition",
                "parameters": [
                    {
                        "description": "JobSchedule definition (json)",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/scheduler.InternalSchedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "schedule",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/scheduler.InternalSchedule"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/scheduler/jobs/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a specific JobSchedule by it's ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Scheduler"
                ],
                "summary": "Get a JobSchedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "schedule",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/scheduler.InternalSchedule"
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create or remplace a JobSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Scheduler"
                ],
                "summary": "Create or remplace a JobSchedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JobSchedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JobSchedule (json)",
                        "name": "rule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "schedule",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/scheduler.InternalSchedule"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete JobSchedule",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Scheduler"
                ],
                "summary": "delete JobSchedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JobSchedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status Internal Server Error"
                    }
                }
            }
        },
        "/engine/scheduler/start": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Start the fact scheduler",
                "tags": [
                    "Scheduler"
                ],
                "summary": "Start the scheduler",
                "responses": {
                    "200": {
                        "description": "Status OK"
                    }
                }
            }
        },
        "/engine/scheduler/trigger": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "\u003cb\u003eForce facts calculation pipeline\u003c/b\u003e\nExample :\n\u003cpre\u003e{\"jobtype\":\"fact\",\"job\":{\"facts_ids\":[\"fact_1\",\"fact_2\"]}}\n{\"jobtype\":\"baseline\",\"job\":{\"baselines\":{\"3\":[\"by_day\",\"by_day_week\"]}}}\u003c/pre\u003e",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Scheduler"
                ],
                "summary": "Force facts calculation pipeline",
                "parameters": [
                    {
                        "description": "JobSchedule definition (json)",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/scheduler.InternalSchedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/search/last": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "query situation history data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "query situation history data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "situationid",
                        "name": "situationid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "situationinstanceid",
                        "name": "situationinstanceid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time.Time",
                        "name": "maxdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time.Time",
                        "name": "mindate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query result",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/search.QueryResult"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/engine/search/last/bycustominterval": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "query situation history data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "query situation history data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "situationid",
                        "name": "situationid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "situationinstanceid",
                        "name": "situationinstanceid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time.Time",
                        "name": "maxdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time.Time",
                        "name": "mindate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time.Time",
                        "name": "referencedate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "time.Duration",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query result",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/search.QueryResult"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/engine/search/last/byinterval": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "query situation history data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "query situation history data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "situationid",
                        "name": "situationid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "situationinstanceid",
                        "name": "situationinstanceid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time.Time",
                        "name": "maxdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time.Time",
                        "name": "mindate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "year | quarter | month | week | day | hour | minute",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query result",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/search.QueryResult"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/engine/security/myself": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Gets un user with the specified id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get an user",
                "responses": {
                    "200": {
                        "description": "status OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/engine/situations": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all situation definitions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "Get all situation definitions",
                "responses": {
                    "200": {
                        "description": "list of situations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/situation.Situation"
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a situation definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "Creates a situation definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Find fact by it's name",
                        "name": "factsByName",
                        "in": "query"
                    },
                    {
                        "description": "Situation definition (json)",
                        "name": "situation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.Situation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "situation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.Situation"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/situations/validate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Validate a new situation definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "Validate a new situation definition",
                "parameters": [
                    {
                        "description": "Situation definition (json)",
                        "name": "situation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.Situation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "situation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.Situation"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/situations/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a situation definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "Get a situation definitionM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "situation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.Situation"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "replace a situation definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "replace a situation definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Situation definition (json)",
                        "name": "situation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.Situation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "situation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.Situation"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a situation definition",
                "tags": [
                    "Situations"
                ],
                "summary": "Delete a situation definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/situations/{id}/evaluation/{instanceid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the last evaluation of a situation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "Get the last evaluation of a situation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Situation Template Instance ID",
                        "name": "instanceid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/situations/{id}/facts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the list of facts for the evaluation of a situation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "Get the list of facts for the evaluation of a situation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "401": {
                        "description": "Status Unauthorized"
                    }
                }
            }
        },
        "/engine/situations/{id}/instances": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the list of situation template instances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "Get the list of situation template instances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/situation.TemplateInstance"
                            }
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "401": {
                        "description": "Status Unauthorized"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "set the template instances of the situation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "set the template instances of the situation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Situation template instance list (json array)",
                        "name": "templateInstances",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/%7Barray%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a situation template instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "Creates a situation template instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Situation template instance (json)",
                        "name": "templateInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.TemplateInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "situation template instance",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.TemplateInstance"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            }
        },
        "/engine/situations/{id}/instances/{instanceid}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "replace a situation template instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "replace a situation template instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Situation Template Instance ID",
                        "name": "instanceid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Situation template instance (json)",
                        "name": "templateInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.TemplateInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "situation template instance",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/situation.TemplateInstance"
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "500": {
                        "description": "Status\" internal server error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a situation template instance",
                "tags": [
                    "Situations"
                ],
                "summary": "Delete a situation template instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Situation Template Instance ID",
                        "name": "instanceid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/engine/situations/{id}/rules": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the list of rules for the evaluation of a situation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Situations"
                ],
                "summary": "Get the list of rules for the evaluation of a situation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rule.Rule"
                            }
                        }
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "401": {
                        "description": "Status Unauthorized"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Set the list of rules for the evaluation of a situation",
                "tags": [
                    "Situations"
                ],
                "summary": "Set the list of rules for the evaluation of a situation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Situation Rules",
                        "name": "ruleIds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/%7Barray%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    },
                    "401": {
                        "description": "Status Unauthorized"
                    }
                }
            }
        },
        "/isalive": {
            "get": {
                "description": "allows to check if the API is alive",
                "tags": [
                    "System"
                ],
                "summary": "Check if alive",
                "responses": {
                    "200": {
                        "description": "Status OK"
                    }
                }
            }
        },
        "/log_level": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get current logging level",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Get Log Level",
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Set logging level\nExample :\n\u003cpre\u003e{\"level\":\"info\"}\u003c/pre\u003e",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Set Log Level",
                "parameters": [
                    {
                        "description": "Level (json)",
                        "name": "level",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate using basic auth\nExample :\n\u003cpre\u003e{\"login\":\"myuser\",\"password\":\"mypassword\"}\u003c/pre\u003e",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Credentials (json)",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/interface%7B%7D"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "400": {
                        "description": "Status Bad Request"
                    }
                }
            }
        },
        "/service/aggregates": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Receive aggregates to be evaluated",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Receive aggregates to be evaluated",
                "parameters": [
                    {
                        "description": "query (json)",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/[]ExternalAggregate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/service/objects": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Receive objects to be evaluated",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Receive objects to be evaluated",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fact object name",
                        "name": "fact",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status OK"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "calendar.Calendar": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "periods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/calendar.Period"
                    }
                },
                "timezone": {
                    "type": "string"
                },
                "unionCalendarIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "calendar.InPeriodContains": {
            "type": "object",
            "properties": {
                "contains": {
                    "type": "boolean"
                }
            }
        },
        "calendar.Period": {
            "type": "object",
            "properties": {
                "dateTimeIntervals": {
                    "type": "object",
                    "$ref": "#/definitions/calendar.dateTimeInterval"
                },
                "daysOfMonth": {
                    "type": "object",
                    "$ref": "#/definitions/calendar.dayInterval"
                },
                "daysOfWeek": {
                    "type": "object",
                    "$ref": "#/definitions/calendar.dayWeekInterval"
                },
                "hoursOfDay": {
                    "type": "object",
                    "$ref": "#/definitions/calendar.hoursInterval"
                },
                "included": {
                    "type": "boolean"
                },
                "monthsOfYear": {
                    "type": "object",
                    "$ref": "#/definitions/calendar.monthInterval"
                }
            }
        },
        "calendar.dateTimeInterval": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "calendar.dayInterval": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer"
                },
                "to": {
                    "type": "integer"
                }
            }
        },
        "calendar.dayWeekInterval": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "calendar.hoursInterval": {
            "type": "object",
            "properties": {
                "fromHour": {
                    "type": "integer"
                },
                "fromMinute": {
                    "type": "integer"
                },
                "toHour": {
                    "type": "integer"
                },
                "toMinute": {
                    "type": "integer"
                }
            }
        },
        "calendar.monthInterval": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "models.Action": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rootCauseId": {
                    "type": "integer"
                }
            }
        },
        "models.ConnectorConfig": {
            "type": "object",
            "properties": {
                "connectorId": {
                    "type": "string"
                },
                "current": {
                    "type": "object"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ExternalConfig": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.FrontAction": {
            "type": "object",
            "properties": {
                "custom": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "occurrence": {
                    "type": "integer"
                },
                "selected": {
                    "type": "boolean"
                },
                "usageRate": {
                    "type": "number"
                }
            }
        },
        "models.FrontRecommendation": {
            "type": "object",
            "properties": {
                "tree": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FrontRootCause"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.FrontRootCause": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FrontAction"
                    }
                },
                "clusteringScore": {
                    "type": "number"
                },
                "custom": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "occurrence": {
                    "type": "integer"
                },
                "selected": {
                    "type": "boolean"
                },
                "usageRate": {
                    "type": "number"
                }
            }
        },
        "models.RootCause": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ruleId": {
                    "type": "integer"
                },
                "situationId": {
                    "type": "integer"
                }
            }
        },
        "notification.FrontNotification": {
            "type": "object",
            "properties": {
                "isRead": {
                    "type": "boolean"
                }
            }
        },
        "permissions.Permission": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            }
        },
        "roles.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "rule.Rule": {
            "type": "object",
            "properties": {
                "calendarId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "scheduler.InternalJob": {
            "type": "object"
        },
        "scheduler.InternalSchedule": {
            "type": "object",
            "properties": {
                "cronexpr": {
                    "type": "string",
                    "example": "0 */15 * * *"
                },
                "id": {
                    "type": "integer"
                },
                "job": {
                    "type": "object",
                    "$ref": "#/definitions/scheduler.InternalJob"
                },
                "jobtype": {
                    "type": "string",
                    "enum": [
                        "fact",
                        "baseline"
                    ]
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "search.FactHistoryRecord": {
            "type": "object",
            "properties": {
                "baselines": {
                    "type": "object"
                },
                "buckets": {
                    "type": "object"
                },
                "dateTime": {
                    "type": "string"
                },
                "docCount": {
                    "type": "object"
                },
                "factId": {
                    "type": "integer"
                },
                "factName": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "search.QueryResult": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "dateTime": {
                        "type": "string"
                    },
                    "situations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/search.SituationHistoryRecord"
                        }
                    }
                }
            }
        },
        "search.SituationHistoryCalendarRecord": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "search.SituationHistoryRecord": {
            "type": "object",
            "properties": {
                "calendar": {
                    "type": "object",
                    "$ref": "#/definitions/search.SituationHistoryCalendarRecord"
                },
                "dateTime": {
                    "type": "string"
                },
                "expressionFacts": {
                    "type": "object"
                },
                "facts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/search.FactHistoryRecord"
                    }
                },
                "metaDatas": {
                    "type": "object"
                },
                "parameters": {
                    "type": "object"
                },
                "situationId": {
                    "type": "integer"
                },
                "situationInstanceId": {
                    "type": "integer"
                },
                "situationInstanceName": {
                    "type": "string"
                },
                "situationName": {
                    "type": "string"
                }
            }
        },
        "search.SituationHistoryRecords": {
            "type": "object",
            "properties": {
                "dateTime": {
                    "type": "string"
                },
                "situations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/search.SituationHistoryRecord"
                    }
                }
            }
        },
        "situation.ExpressionFact": {
            "type": "object",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "situation.Situation": {
            "type": "object",
            "properties": {
                "calendarId": {
                    "type": "integer"
                },
                "expressionFacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/situation.ExpressionFact"
                    }
                },
                "facts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "isObject": {
                    "type": "boolean"
                },
                "isTemplate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object"
                }
            }
        },
        "situation.TemplateInstance": {
            "type": "object",
            "properties": {
                "calendarId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object"
                },
                "situationId": {
                    "type": "integer"
                }
            }
        },
        "users.User": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
