### DO NOT COMMIT ANY ENVIRONMENT CHANGE ON THIS FILE
### If you need to use another environment, edit this file localy, and do not propagate the changes.

# Enable or disable debug mode
# Debug mode print all configuration variables when the binary start
# WARNING: every single variable will be printed, including password or sensitive data
# Default value: "false"
DEBUG_MODE = "false"

# Enable or disable production log
# Default value: true
LOGGER_PRODUCTION = "true"

# Specify the server running port. API (including swagger) will be reachable through this port
# Default value: "9000"
HTTP_SERVER_PORT = "9000"

# Enable or disable TLS and HTTPS server security (false = HTTPS / true = HTTP)
# If HTTP_SERVER_ENABLE_TLS = true, HTTP_SERVER_SSL_FILE_CRT and HTTP_SERVER_SSL_FILE_KEY must be specified
# Default value: "false"
HTTP_SERVER_ENABLE_TLS = "false"

# TLS certificate file path
# Default value: "certs/server.rsa.crt"
HTTP_SERVER_TLS_FILE_CRT = "certs/server.rsa.crt"

# TLS private key file path
# Default value: "certs/server.rsa.key"
HTTP_SERVER_TLS_FILE_KEY = "certs/server.rsa.key"

# Enable or disable CORS policy on the API
# See https://enable-cors.org/
# Default value: "false"
HTTP_SERVER_API_ENABLE_CORS = "false"

# Enable or disable API security
# If unsecured = false, a valid JWT (JSON Web Token) is required to access the API
# This JWT is delivered using the /login endpoint (which required a login and a password)
# If HTTP_SERVER_API_ENABLE_SECURITY = false, no JWT is required and all endpoints can be called freely
# Default value: "true"
HTTP_SERVER_API_ENABLE_SECURITY = "true"

# Enable or disable API Gateway mode
# If HTTP_SERVER_API_ENABLE_GATEWAY_MODE = true, the API will still required a JWT but no validation will be done on this JWT
# Be aware that in gateway mode, every JWT MUST have been validated by another layer of security (in this case, an API Gateway using the auth-api)
# The auth-api will be responsible to deliver the tokens (/login) and to validate the tokens (/validate)
# Default value: "false"
HTTP_SERVER_API_ENABLE_GATEWAY_MODE = "false"

# Enable or disable verbose API error
# If enabled, in case of error, the API will returns additional information to help debugging
# Do not enable in production
# Default value: "false
HTTP_SERVER_API_ENABLE_VERBOSE_ERROR = "false"

# Specify the instance name
# The instance name must be the same in every components in the stack to ensure proper working conditions
# Default value: "myrtea"
INSTANCE_NAME = "myrtea"

# Specify the hostname used to access the swagger UI
# If not set (or incorrect), the swagger UI will be available but will not be usable (using execute on endpoints)
# Default value: "localhost:9000"
SWAGGER_HOST = "localhost:9000"

# Specify the basepath used to access the swagger UI
# If not set (or incorrect), the swagger UI will be available but will not be usable (using execute on endpoints)
# Default value: "/api/v5"
SWAGGER_BASEPATH = "/api/v5"

# Set the title displayed in the topbar of the Swagger UI
# Default value: ""
SWAGGER_TOPBAR_TITLE = ""

# Set the background color of the topbar of the Swagger UI
# Default value: ""
# Example values: "#000000", "#618EF2", "#A6343A"
SWAGGER_TOPBAR_COLOR = ""

# Specify the elasticsearch URLS
# Array of URLS might not work using environment variable (should be fixed soon)
# Default value: "http://localhost:9200"
ELASTICSEARCH_URLS = ["http://localhost:9200"]

# Specify the postgresql host name
# Default value: "localhost"
POSTGRESQL_HOSTNAME = "localhost"

# Specify the postgresql port
# Default value: "5432"
POSTGRESQL_PORT = "5432"

# Specify the postgresql database name
# Default value: "postgres"
POSTGRESQL_DBNAME = "postgres"

# Specify the postgresql user name
# Default value: "postgres"
POSTGRESQL_USERNAME = "postgres"

# Specify the postgresql user password
# Default value: "postgres"
POSTGRESQL_PASSWORD = "postgres"

# Specify the postgresql connection pool maximum open connection
# Default value: "10"
POSTGRESQL_CONN_POOL_MAX_OPEN = "10"

# Specify the postgresql connection pool maximum idle connection
# Default value: "10"
POSTGRESQL_CONN_POOL_MAX_IDLE = "10"

# Specify the postgresql connection pool maximum idle connection
# Expressed as a Golang duration
# Default value: "0"
POSTGRESQL_CONN_MAX_LIFETIME = "0"

# Specify whether to migrate the database on startup
# If set to "true", the database will be migrated to the latest version on startup
# This is useful for ensuring that the database schema is always up to date with the latest version of the application.
# Default value: "true"
POSTGRESQL_MIGRATION_ON_STARTUP = "true"

# Enable or disable crons automation on API start
# Warning: Keep this parameter to "true" in production to ensure proper rotation even after a restart
# Default value: "true"
ENABLE_CRONS_ON_START = "true"

# Specify the aggregate-ingesters maximum queue size
# Default value: "100"
AGGREGATEINGESTER_QUEUE_BUFFER_SIZE = "100"

# Specify the authentication mode
# Can either be "BASIC" or "OIDC"
# Default value: "BASIC"
AUTHENTICATION_MODE = "BASIC"

# Specify the SMTP Username
# Default value : "smtp@example.com"
SMTP_USERNAME = "smtp@example.com"

# Specify the SMTP Password
# Default value : ""
SMTP_PASSWORD = ""

# Specify the SMTP host
# Default value : "smtp.example.com"
SMTP_HOST =  "smtp.example.com"

# Specify the SMTP Port
# Default value : "465"
SMTP_PORT = "465"

# OIDC Client Id: A unique identifier representing the client application seeking access to the server's resources. (Only if AUTHENTICATION_MODE="OIDC")
# Default value: ""
AUTHENTICATION_OIDC_CLIENT_ID = ""

# OIDC Client Secret: A shared secret between the client application and the authentication server to prove the client's identity. (Only if AUTHENTICATION_MODE="OIDC")
# Note: This secret should be securely stored and never shared.
# Default value: ""
AUTHENTICATION_OIDC_CLIENT_SECRET = ""

# OIDC Redirect Url: The redirection URL to which the user will be redirected after successful authentication. (Only if AUTHENTICATION_MODE="OIDC")
# This URL should be configured as a valid redirection URL in the OIDC client application settings.
# Default value: "https://127.0.0.1:5556/auth/oidc/callback"
AUTHENTICATION_OIDC_REDIRECT_URL = "http://127.0.0.1:9000/api/v5/auth/oidc/callback"

# OIDC URL: The URL of the OIDC (OpenID Connect) server providing the authentication service. (Only if AUTHENTICATION_MODE="OIDC")
# Default value: "https://accounts.google.com"
AUTHENTICATION_OIDC_ISSUER_URL = "https://accounts.google.com"

# OIDC Scopes: The scopes of access requested when authenticating with the OIDC server. (Only if AUTHENTICATION_MODE="OIDC")
# These should be a list of scopes separated by commas.
# Default value: "profile,email"
AUTHENTICATION_OIDC_SCOPES = "profile,email,roles"

# AUTHENTICATION_OIDC_FRONT_END_URL: The URL of the front-end application to which the user will be redirected after successful OIDC authentication.
# Default value: "http://127.0.0.1:4200"
AUTHENTICATION_OIDC_FRONT_END_URL = "http://127.0.0.1:4200"

# AUTHENTICATION_OIDC_ENCRYPTION_KEY: The secret key used for state encryption/decryption in the OpenID Connect authentication process.
# This should be a secure, randomly generated string of exactly 16, 24 or 32 characters that is kept secret.
# This secret key is used to sign and verify the state parameter in the OIDC authentication process.
# This is necessary when the application is running in a context where the session cannot be used to store the state,
# such as when the front-end and back-end are running on different domains.
# Note: The key length is critical for the AES encryption algorithm used for state encryption/decryption.
# It must be exactly 16, 24 or 32 characters long.
# Default value: "thisis24characterslongs." (24 characters)
AUTHENTICATION_OIDC_ENCRYPTION_KEY = "thisis24characterslongs."

# NOTIFICATION_LIFETIME: The lifetime of a notification in the database.
# Default value: "168h"
NOTIFICATION_LIFETIME = "168h" # 168h = 7 days, available units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h"

# Path to directory where the resulting export files will be stored.
# Default value: "exports/"
EXPORT_BASE_PATH = "exports/"

# Number of days before one export file will be auto deleted
# Default value: 4
EXPORT_DISK_RETENTION_DAYS = 4

# Export queue max size, any export request that is made when queue is full will be refused.
# Default value: 30
EXPORT_QUEUE_MAX_SIZE = 30

# Number of concurrent export workers
# Default value: 4
EXPORT_WORKERS_COUNT = 4

# Whether download must be directly streamed through http or handled by an external web server
# Default value: true
EXPORT_DIRECT_DOWNLOAD = true

# Reverse proxy like nginx, apache gives direct access to the exports directory at a specific path
# Full URL to the exports directory
# Default value: ""
EXPORT_INDIRECT_DOWNLOAD_URL = ""

# Maximum search requests in a single custom export request
# Default value: 10
EXPORT_MAX_CUSTOM_SEARCH_REQUESTS = 10

# Specify the maximum number of historical versions to keep for External Configs
# When a new version is added, any versions exceeding this number will be deleted,
# starting with the oldest versions to retain only the most recent ones.
# Default value: 5
MAX_EXTERNAL_CONFIG_VERSIONS_TO_KEEP = 5
